<?php

namespace ContainerMS8KLfT;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_JwTUur4Service extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.jwTUur4' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.jwTUur4'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\TacheController::addTache' => ['privates', '.service_locator.t6i3vFk', 'get_ServiceLocator_T6i3vFkService', true],
            'App\\Controller\\TacheController::deleteTache' => ['privates', '.service_locator.aH900CB', 'get_ServiceLocator_AH900CBService', true],
            'App\\Controller\\TacheController::getAllTaches' => ['privates', '.service_locator.bpJZVhN', 'get_ServiceLocator_BpJZVhNService', true],
            'App\\Controller\\TacheController::updateTache' => ['privates', '.service_locator.jGsNLEc', 'get_ServiceLocator_JGsNLEcService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\TacheController:addTache' => ['privates', '.service_locator.t6i3vFk', 'get_ServiceLocator_T6i3vFkService', true],
            'App\\Controller\\TacheController:deleteTache' => ['privates', '.service_locator.aH900CB', 'get_ServiceLocator_AH900CBService', true],
            'App\\Controller\\TacheController:getAllTaches' => ['privates', '.service_locator.bpJZVhN', 'get_ServiceLocator_BpJZVhNService', true],
            'App\\Controller\\TacheController:updateTache' => ['privates', '.service_locator.jGsNLEc', 'get_ServiceLocator_JGsNLEcService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\TacheController::addTache' => '?',
            'App\\Controller\\TacheController::deleteTache' => '?',
            'App\\Controller\\TacheController::getAllTaches' => '?',
            'App\\Controller\\TacheController::updateTache' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\TacheController:addTache' => '?',
            'App\\Controller\\TacheController:deleteTache' => '?',
            'App\\Controller\\TacheController:getAllTaches' => '?',
            'App\\Controller\\TacheController:updateTache' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
